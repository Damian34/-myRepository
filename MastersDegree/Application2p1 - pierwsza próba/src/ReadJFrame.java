
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.imageio.ImageIO;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dami
 */
public class ReadJFrame extends javax.swing.JFrame {

    /**
     * Creates new form ReadJFrame
     */
    public ReadJFrame() {
        initComponents();
        new ConfigFrame(this,"Read");
    }
    
    public ReadJFrame(MainJFrame fr,int typ) {
        initComponents();
        new ConfigFrame(this,"Read");
        
        if(typ==0)
        {czytaj(fr,0);}
        else if(typ==1)
        {czytaj2(fr);}  
        else if(typ==2)
        {czytaj(fr,1);}
    }
    
    private void czytaj(MainJFrame app,int nr)
    {
        try{
            Filter();            
            jFileChooser1.showOpenDialog(null);
            File plik1 = jFileChooser1.getSelectedFile();
            
            String s1 = plik1.getCanonicalPath();
            
            String[] ss = s1.split("\\\\");
            String[] ss2 = ss[ss.length-1].split("\\.");
                        
            BufferedImage image = ImageIO.read(plik1);
            
            if(nr==0)
            {
                app.LastFileName=ss[ss.length-1];
                app.LastExtension=ss2[ss2.length-1];
                
                app.image=image;
                app.ImageDraw();        
            }else if (nr==1)
            {
                app.image2=image;
                app.ImageDraw2();
            }
            
            app.Log("wczytano obraz");
        }catch(Exception e){System.out.println("ReadFileError: "+e);}
    }
    
    private void czytaj2(MainJFrame app)
    {
        try{
            jFileChooser1.showOpenDialog(null);
            File plik1 = jFileChooser1.getSelectedFile();
            
            String s1 = plik1.getCanonicalPath();
            
            ///
            BufferedReader br = new BufferedReader(new FileReader(s1));
            //FileReader fr = null;
            String ln="";
            String wynik="";
            
            while ((ln = br.readLine()) != null) 
            {
		wynik+=ln+"\n";
            }        
            br.close();
            
            app.setText(wynik);
            
            app.Log("wczytano wiadomość");
        }catch(Exception e){System.out.println("ReadFileError: "+e);}
    }

    private void Filter()
    {
        FileNameExtensionFilter f1 = new FileNameExtensionFilter("*.bmp","bmp");        
        String[] jp ={"jpg","jpeg"};
        FileNameExtensionFilter f2 = new FileNameExtensionFilter("*.jpg",jp);
        
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        
        jFileChooser1.addChoosableFileFilter(f1);        
        jFileChooser1.addChoosableFileFilter(f2);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jFileChooser1.setCurrentDirectory(new java.io.File("C:\\Users\\dami\\Desktop"));
        jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReadJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReadJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReadJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReadJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReadJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables
}
