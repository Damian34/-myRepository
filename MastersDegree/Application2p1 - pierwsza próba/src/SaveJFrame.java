
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.PrintWriter;
import javax.imageio.ImageIO;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dami
 */
public class SaveJFrame extends javax.swing.JFrame {

    /**
     * Creates new form SaveJFrame
     */
    public SaveJFrame() {
        initComponents();
        new ConfigFrame(this,"Save");
    }
    
    public SaveJFrame(MainJFrame fr,String str,int typ) {
        initComponents();
        new ConfigFrame(this,"Save");
        
        if(typ==0)
        {save(fr,0);}
        else if(typ==1)
        {save2(fr,str);}
        else if(typ==2)
        {save(fr,1);}
        
    }

    private void save(MainJFrame fr,int nr)
    {
        try{
            Filter();            
            String s1="";
            BufferedImage image=null;
            
            if(nr==0)
            {
                String[] s0=fr.LastFileName.split("\\.");
                for(int i=0;i<s0.length-1;i++)
                {                
                    s1+=s0[i];
                    if(i!=s0.length-2){s1+=".";}
                }
                s1+="+."+s0[s0.length-1];
                image = fr.image;
            }
            else if(nr==1)
            {
                s1="image.bmp";
                image = fr.getSecondImage();
            }
            
            jFileChooser1.setSelectedFile(new File(s1));
            jFileChooser1.showOpenDialog(null);            
            
            File plik1 = jFileChooser1.getSelectedFile();
            String s = plik1.getPath();
            
            String[] p0 = s.split("\\.");
            String p = p0[p0.length-1];            
            p=p.toLowerCase();
            
            if(p.equals("bmp")){                
                ImageIO.write(image, "BMP", plik1);
                
            }else if(p.equals("jpg")){                
                ImageIO.write(image, "jpg", plik1);
                
            }else if(p.equals("jpeg")){                
                ImageIO.write(image, "jpg", plik1);
            }
            
            fr.Log("zapisano obraz");
        }catch(Exception e){System.out.println("SaveFileError: "+e);}
    }
    
    private void save2(MainJFrame fr,String str)
    {
        try{
            jFileChooser1.setSelectedFile(new File("plik.txt"));
            jFileChooser1.showOpenDialog(null);            
            
            File plik1 = jFileChooser1.getSelectedFile();
                      
            String[] ss = str.split("\n");
                        
            PrintWriter writer = new PrintWriter(plik1);
            for(int i=0;i<ss.length;i++)
            writer.println(ss[i]);
            writer.close();
            
            fr.Log("zapisano wiadomość");            
        }catch(Exception e){System.out.println("SaveFileError: "+e);}
    }
    
    private void Filter()
    {
        FileNameExtensionFilter f1 = new FileNameExtensionFilter("*.bmp","bmp");        
        String[] jp ={"jpg","jpeg"};
        FileNameExtensionFilter f2 = new FileNameExtensionFilter("*.jpg",jp);
        
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        
        jFileChooser1.addChoosableFileFilter(f1);        
        jFileChooser1.addChoosableFileFilter(f2);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jFileChooser1.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooser1.setApproveButtonText("Zapisz");
        jFileChooser1.setApproveButtonToolTipText("Zapisz");
        jFileChooser1.setCurrentDirectory(new java.io.File("C:\\Users\\dami\\Desktop"));
        jFileChooser1.setDialogTitle("Zapisz");
        jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        jFileChooser1.setRequestFocusEnabled(false);
        jFileChooser1.setSelectedFiles(null);
        jFileChooser1.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaveJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaveJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaveJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaveJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SaveJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables
}
