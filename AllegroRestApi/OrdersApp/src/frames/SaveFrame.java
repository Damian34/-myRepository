package frames;

import frames.operations.ConfigFrame;
import frames.operations.DateConf;
import java.io.File;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.filechooser.FileNameExtensionFilter;

public class SaveFrame extends javax.swing.JFrame {

    public List<String> list = new ArrayList<>();

    public SaveFrame() {
        initComponents();
        new ConfigFrame(this, "Zapis");
    }

    public SaveFrame(List<String> list) {
        initComponents();
        new ConfigFrame(this, "Zapis");
        this.list = list;
        write();
    }

    public void write() {
        try {
            filter();
            jFileChooser2.showSaveDialog(this);
            jFileChooser2.setApproveButtonText("Zapisz");
            jFileChooser2.setName("Zapis");
            jFileChooser2.setApproveButtonToolTipText("Zapisz");

            File plik1 = jFileChooser2.getSelectedFile();
            String s = plik1.getPath();
            
            String[] str = s.split("\\s");
            String p = str[str.length-1];
            if(p.indexOf(".txt")==-1){
                s+=".txt";
            }
            PrintWriter write = new PrintWriter(s);

            write.println(getToDay());
            for (int i = 0; i < list.size(); i++) {
                if (i != list.size() - 1) {
                    write.println(list.get(i));
                } else {
                    write.print(list.get(i));
                }
            }
            write.close();
        } catch (Exception e) {
        }

    }

    private void filter() {
        FileNameExtensionFilter f1 = new FileNameExtensionFilter("*.txt", "txt");
        jFileChooser2.setAcceptAllFileFilterUsed(false);
        jFileChooser2.addChoosableFileFilter(f1);
    }
    
    public String getToDay(){
        DateConf dc = new DateConf();
        String date = dc.getToDay();
        return "\""+date.substring(2, 4)+date.substring(5, 7)+date.substring(8, 10)+"\"";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser2 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jFileChooser2.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooser2.setApproveButtonToolTipText("Zapisz");
        jFileChooser2.setCurrentDirectory(new java.io.File("C:\\Users\\dami\\Desktop"));
        jFileChooser2.setDialogTitle("Zapisz");
        jFileChooser2.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        jFileChooser2.setRequestFocusEnabled(false);
        jFileChooser2.setSelectedFiles(null);
        jFileChooser2.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jFileChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaveFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaveFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaveFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaveFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SaveFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser2;
    // End of variables declaration//GEN-END:variables
}
