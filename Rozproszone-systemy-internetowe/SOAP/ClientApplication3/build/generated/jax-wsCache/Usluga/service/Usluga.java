
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Usluga", targetNamespace = "http://Service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Usluga {


    /**
     * 
     * @param lc
     * @param lw
     * @param lk
     * @return
     *     returns java.util.List<service.Książka>
     */
    @WebMethod(operationName = "BooksAvailable")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BooksAvailable", targetNamespace = "http://Service/", className = "service.BooksAvailable")
    @ResponseWrapper(localName = "BooksAvailableResponse", targetNamespace = "http://Service/", className = "service.BooksAvailableResponse")
    @Action(input = "http://Service/Usluga/BooksAvailableRequest", output = "http://Service/Usluga/BooksAvailableResponse")
    public List<Książka> booksAvailable(
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param lc
     * @param text
     * @param lw
     * @param lk
     * @return
     *     returns java.util.List<service.Czytelnik>
     */
    @WebMethod(operationName = "ReaderAll")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ReaderAll", targetNamespace = "http://Service/", className = "service.ReaderAll")
    @ResponseWrapper(localName = "ReaderAllResponse", targetNamespace = "http://Service/", className = "service.ReaderAllResponse")
    @Action(input = "http://Service/Usluga/ReaderAllRequest", output = "http://Service/Usluga/ReaderAllResponse")
    public List<Czytelnik> readerAll(
        @WebParam(name = "text", targetNamespace = "")
        String text,
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param lc
     * @param text
     * @param lw
     * @param lk
     * @return
     *     returns java.util.List<service.Książka>
     */
    @WebMethod(operationName = "BooksAll")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BooksAll", targetNamespace = "http://Service/", className = "service.BooksAll")
    @ResponseWrapper(localName = "BooksAllResponse", targetNamespace = "http://Service/", className = "service.BooksAllResponse")
    @Action(input = "http://Service/Usluga/BooksAllRequest", output = "http://Service/Usluga/BooksAllResponse")
    public List<Książka> booksAll(
        @WebParam(name = "text", targetNamespace = "")
        String text,
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param lc
     * @param lw
     * @param lk
     * @return
     *     returns java.util.List<service.Książka>
     */
    @WebMethod(operationName = "BooksBorrowed")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BooksBorrowed", targetNamespace = "http://Service/", className = "service.BooksBorrowed")
    @ResponseWrapper(localName = "BooksBorrowedResponse", targetNamespace = "http://Service/", className = "service.BooksBorrowedResponse")
    @Action(input = "http://Service/Usluga/BooksBorrowedRequest", output = "http://Service/Usluga/BooksBorrowedResponse")
    public List<Książka> booksBorrowed(
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param lc
     * @param lw
     * @param lk
     * @return
     *     returns java.util.List<service.Książka>
     */
    @WebMethod(operationName = "BooksHeld")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BooksHeld", targetNamespace = "http://Service/", className = "service.BooksHeld")
    @ResponseWrapper(localName = "BooksHeldResponse", targetNamespace = "http://Service/", className = "service.BooksHeldResponse")
    @Action(input = "http://Service/Usluga/BooksHeldRequest", output = "http://Service/Usluga/BooksHeldResponse")
    public List<Książka> booksHeld(
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param lc
     * @param lw
     * @param lk
     * @return
     *     returns java.util.List<service.Punkt1>
     */
    @WebMethod(operationName = "ReaderBorrower")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ReaderBorrower", targetNamespace = "http://Service/", className = "service.ReaderBorrower")
    @ResponseWrapper(localName = "ReaderBorrowerResponse", targetNamespace = "http://Service/", className = "service.ReaderBorrowerResponse")
    @Action(input = "http://Service/Usluga/ReaderBorrowerRequest", output = "http://Service/Usluga/ReaderBorrowerResponse")
    public List<Punkt1> readerBorrower(
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param imie
     * @param nazwisko
     * @param lc
     * @param lw
     * @param lk
     * @return
     *     returns service.Punkt4
     */
    @WebMethod(operationName = "ReaderAdd")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ReaderAdd", targetNamespace = "http://Service/", className = "service.ReaderAdd")
    @ResponseWrapper(localName = "ReaderAddResponse", targetNamespace = "http://Service/", className = "service.ReaderAddResponse")
    @Action(input = "http://Service/Usluga/ReaderAddRequest", output = "http://Service/Usluga/ReaderAddResponse")
    public Punkt4 readerAdd(
        @WebParam(name = "imie", targetNamespace = "")
        String imie,
        @WebParam(name = "nazwisko", targetNamespace = "")
        String nazwisko,
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param lc
     * @param lw
     * @param tytul
     * @param autor
     * @param lk
     * @return
     *     returns service.Punkt4
     */
    @WebMethod(operationName = "BookAdd")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BookAdd", targetNamespace = "http://Service/", className = "service.BookAdd")
    @ResponseWrapper(localName = "BookAddResponse", targetNamespace = "http://Service/", className = "service.BookAddResponse")
    @Action(input = "http://Service/Usluga/BookAddRequest", output = "http://Service/Usluga/BookAddResponse")
    public Punkt4 bookAdd(
        @WebParam(name = "tytul", targetNamespace = "")
        String tytul,
        @WebParam(name = "autor", targetNamespace = "")
        String autor,
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param idk
     * @param czas
     * @param lc
     * @param idc
     * @param lw
     * @param lk
     * @return
     *     returns service.Punkt4
     */
    @WebMethod(operationName = "BookGive")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BookGive", targetNamespace = "http://Service/", className = "service.BookGive")
    @ResponseWrapper(localName = "BookGiveResponse", targetNamespace = "http://Service/", className = "service.BookGiveResponse")
    @Action(input = "http://Service/Usluga/BookGiveRequest", output = "http://Service/Usluga/BookGiveResponse")
    public Punkt4 bookGive(
        @WebParam(name = "idk", targetNamespace = "")
        int idk,
        @WebParam(name = "idc", targetNamespace = "")
        int idc,
        @WebParam(name = "czas", targetNamespace = "")
        int czas,
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param lc
     * @param lw
     * @param lk
     * @return
     *     returns java.util.List<service.Punkt2>
     */
    @WebMethod(operationName = "AllStatus")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AllStatus", targetNamespace = "http://Service/", className = "service.AllStatus")
    @ResponseWrapper(localName = "AllStatusResponse", targetNamespace = "http://Service/", className = "service.AllStatusResponse")
    @Action(input = "http://Service/Usluga/AllStatusRequest", output = "http://Service/Usluga/AllStatusResponse")
    public List<Punkt2> allStatus(
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param numer
     * @param lc
     * @param lw
     * @param lk
     * @return
     *     returns service.Punkt4
     */
    @WebMethod(operationName = "BookReturn")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BookReturn", targetNamespace = "http://Service/", className = "service.BookReturn")
    @ResponseWrapper(localName = "BookReturnResponse", targetNamespace = "http://Service/", className = "service.BookReturnResponse")
    @Action(input = "http://Service/Usluga/BookReturnRequest", output = "http://Service/Usluga/BookReturnResponse")
    public Punkt4 bookReturn(
        @WebParam(name = "numer", targetNamespace = "")
        int numer,
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param numer
     * @param lc
     * @param lw
     * @param lk
     * @return
     *     returns service.Punkt4
     */
    @WebMethod(operationName = "RemoveBook")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "RemoveBook", targetNamespace = "http://Service/", className = "service.RemoveBook")
    @ResponseWrapper(localName = "RemoveBookResponse", targetNamespace = "http://Service/", className = "service.RemoveBookResponse")
    @Action(input = "http://Service/Usluga/RemoveBookRequest", output = "http://Service/Usluga/RemoveBookResponse")
    public Punkt4 removeBook(
        @WebParam(name = "numer", targetNamespace = "")
        int numer,
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param numer
     * @param lc
     * @param lw
     * @param lk
     * @return
     *     returns service.Punkt4
     */
    @WebMethod(operationName = "RemoveReader")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "RemoveReader", targetNamespace = "http://Service/", className = "service.RemoveReader")
    @ResponseWrapper(localName = "RemoveReaderResponse", targetNamespace = "http://Service/", className = "service.RemoveReaderResponse")
    @Action(input = "http://Service/Usluga/RemoveReaderRequest", output = "http://Service/Usluga/RemoveReaderResponse")
    public Punkt4 removeReader(
        @WebParam(name = "numer", targetNamespace = "")
        int numer,
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param numer
     * @param lc
     * @param lw
     * @param lk
     * @return
     *     returns java.util.List<service.Punkt3>
     */
    @WebMethod(operationName = "ReaderStatus")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ReaderStatus", targetNamespace = "http://Service/", className = "service.ReaderStatus")
    @ResponseWrapper(localName = "ReaderStatusResponse", targetNamespace = "http://Service/", className = "service.ReaderStatusResponse")
    @Action(input = "http://Service/Usluga/ReaderStatusRequest", output = "http://Service/Usluga/ReaderStatusResponse")
    public List<Punkt3> readerStatus(
        @WebParam(name = "numer", targetNamespace = "")
        int numer,
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param lc
     * @param lw
     * @param lk
     * @return
     *     returns java.util.List<service.Punkt2>
     */
    @WebMethod(operationName = "BorrowedStatus")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BorrowedStatus", targetNamespace = "http://Service/", className = "service.BorrowedStatus")
    @ResponseWrapper(localName = "BorrowedStatusResponse", targetNamespace = "http://Service/", className = "service.BorrowedStatusResponse")
    @Action(input = "http://Service/Usluga/BorrowedStatusRequest", output = "http://Service/Usluga/BorrowedStatusResponse")
    public List<Punkt2> borrowedStatus(
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

    /**
     * 
     * @param lc
     * @param lw
     * @param lk
     * @return
     *     returns service.Punkt4
     */
    @WebMethod(operationName = "UpdateAll")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "UpdateAll", targetNamespace = "http://Service/", className = "service.UpdateAll")
    @ResponseWrapper(localName = "UpdateAllResponse", targetNamespace = "http://Service/", className = "service.UpdateAllResponse")
    @Action(input = "http://Service/Usluga/UpdateAllRequest", output = "http://Service/Usluga/UpdateAllResponse")
    public Punkt4 updateAll(
        @WebParam(name = "lk", targetNamespace = "")
        List<Książka> lk,
        @WebParam(name = "lc", targetNamespace = "")
        List<Czytelnik> lc,
        @WebParam(name = "lw", targetNamespace = "")
        List<Wypożyczenie> lw);

}
